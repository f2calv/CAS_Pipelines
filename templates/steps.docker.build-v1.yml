parameters:
- name: azureSubscription
  type: string
  default: $(azureSubscription)
- name: repositoryFolder
  type: string
  default: $(repositoryFolder)
- name: repository
  type: string
  default: $(repository)
- name: azureContainerRegistry
  type: string
  default: $(azureContainerRegistry)
- name: PushTagBuildNumber
  type: boolean
  default: $(PushTagBuildNumber)
- name: PushTagLatest
  type: boolean
  default: $(PushTagLatest)
- name: Dockerfile
  type: string
  default: Dockerfile
- name: tag
  type: string
  default: $(Build.BuildNumber)
- name: acrName
  type: string
  default: $(acrName)
- name: bashExists
  type: boolean
  default: true

steps:
- ${{ if eq(parameters.bashExists, 'true') }}:
  - template: parameter-check-v1.yml
    parameters:
      Name: repositoryFolder
      Value: ${{ parameters.repositoryFolder }}

  - template: parameter-check-v1.yml
    parameters:
      Name: repository
      Value: ${{ parameters.repository }}

  - template: parameter-check-v1.yml
    parameters:
      Name: azureContainerRegistry
      Value: ${{ parameters.azureContainerRegistry }}

  - template: parameter-check-v1.yml
    parameters:
      Name: PushTagBuildNumber
      Value: ${{ parameters.PushTagBuildNumber }}

  - template: parameter-check-v1.yml
    parameters:
      Name: PushTagLatest
      Value: ${{ parameters.PushTagLatest }}

#for custom agent KubernetesAgents (deprecated)
#- task: DockerInstaller@0
#  displayName: 'Docker Installer'
#  inputs:
#    dockerVersion: 17.09.0-ce
#    releaseType: stable

#- task: Docker@2
#  displayName: 'Build and Push image ${{ parameters.repository }}:${{ parameters.tag }}'
#  inputs:
#    containerRegistry: ${{ parameters.azureContainerRegistry}}
#    repository: ${{ parameters.repository }}
#    command: buildAndPush
#    Dockerfile: ${{ parameters.repositoryFolder}}/${{ parameters.Dockerfile }}
#    tags: ${{ parameters.tag }}

#Note: login to ACR is needed when building from base images held within ACR
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: ${{ parameters.acrName }}

- task: Docker@1
  displayName: 'Build image ${{ parameters.repository }}:${{ parameters.tag }}'
  inputs:
    imageName: '${{ parameters.azureContainerRegistry }}/${{ parameters.repository }}:${{ parameters.tag }}'
    command: build
    dockerFile: ${{ parameters.repositoryFolder }}/${{ parameters.Dockerfile }}
    useDefaultContext: false
    addDefaultLabels: false #false enables image caching when building on a self-hosted agent
    arguments: --pull --build-arg ARTIFACTS_ENDPOINT=$(ARTIFACTS_ENDPOINT) --build-arg ARTIFACTS_PAT=$(ARTIFACTS_PAT)

- pwsh: |
    docker tag ${{ parameters.azureContainerRegistry }}/${{ parameters.repository }}:${{ parameters.Tag }} ${{ parameters.azureContainerRegistry }}/${{ parameters.repository }}:latest
  displayName: 'Docker tag ${{ parameters.azureContainerRegistry }}/${{ parameters.repository }}:${{ parameters.tag }} --> ${{ parameters.azureContainerRegistry }}/${{ parameters.repository }}:latest'

- ${{ if eq(parameters.PushTagBuildNumber, 'true') }}:
  - task: Docker@1
    displayName: 'Push image (1 of 2) ${{ parameters.repository }}:${{ parameters.tag }}'
    inputs:
      azureSubscriptionEndpoint: ${{ parameters.azureSubscription }}
      azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
      imageName: '${{ parameters.repository }}:${{ parameters.tag }}'
      command: push

- ${{ if eq(parameters.PushTagLatest, 'true') }}:
  - task: Docker@1
    displayName: 'Push image (2 of 2) ${{ parameters.repository }}:latest'
    inputs:
      azureSubscriptionEndpoint: ${{ parameters.azureSubscription }}
      azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
      imageName: '${{ parameters.repository }}:latest'
      command: push